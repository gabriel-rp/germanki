name: PyPI Release

on:
  push:
    tags:
      - "v*"

jobs:
  pypi_release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      PACKAGE_VERSION: ${{ steps.get_version.outputs.PACKAGE_VERSION }}  # Make version available

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read Python version
        id: python_version
        run: echo "PYTHON_VERSION=$(cat .python-version)" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install

      - name: Configure PyPI
        run: poetry config pypi-token.pypi ${{ secrets.PYPI_API_TOKEN }}

      - name: Build package
        run: poetry build

      - name: Publish package to PyPI
        run: poetry publish

      - name: Get package version
        id: get_version
        run: |
          VERSION=$(poetry version -s)
          echo "PACKAGE_VERSION=${VERSION}" >> $GITHUB_OUTPUT

  build-and-push:
    needs: pypi_release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Log into Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Read Python version
        run: echo "PYTHON_VERSION=$(cat .python-version)" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/germanki:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/germanki:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/germanki:${{ needs.pypi_release.outputs.PACKAGE_VERSION }}
          # Build arguments, if needed
          build-args: |
            PYTHON_VERSION=${{ env.PYTHON_VERSION }}
